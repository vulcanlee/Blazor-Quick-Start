@page "/"
@using System.Threading
@using System.Threading.Tasks

<h1>Hello, Blazor 小遊戲!</h1>

<div>
    <div class="h3">請選擇 剪刀、石頭、布</div>
    <div>
        <img src="@Rock.Image" class="@Rock.Background" style="width:10em;height:10em;"
             @onclick="()=>{ Choose(Rock); }">
        <img src="@Paper.Image" class="@Paper.Background" style="width:10em;height:10em;"
             @onclick="()=>{ Choose(Paper); }">
        <img src="@Scissors.Image" class="@Scissors.Background" style="width:10em;height:10em;"
             @onclick="()=>{ Choose(Scissors); }">
    </div>
    <div>
        @if (gameStatus == GameStatus.Start)
        {
            <button class="btn btn-primary"
                    @onclick="Start">
                開始
            </button>
        }
        else if (gameStatus == GameStatus.Run)
        {
            <div class="text-primary">請選擇上方的 剪刀 石頭 布 圖片</div>
        }
        else
        {
            <button class="btn btn-primary"
                    @onclick="Restart">
                再來一次
            </button>
        }
    </div>
    <div>
        <img src="@Computer" style="width:10em;height:10em;">
    </div>
</div>

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    CancellationTokenSource cts = new CancellationTokenSource();
    CancellationToken token;
    void Start()
    {
        Play();
    }
    void Run()
    {

    }
    void Restart()
    {
        Play();
    }
    void Play()
    {
        Reset();
        GameMessage = "請選擇 剪刀 石頭 布";
        cts = new CancellationTokenSource();
        token = cts.Token;
        Computer = Rock.Image;
        Task.Run(async () =>
        {
            while (true)
            {
                if (!token.IsCancellationRequested)
                {
                    await InvokeAsync(() =>
                    {
                        if (Computer == Rock.Image)
                        {
                            Computer = Paper.Image;
                        }
                        else if (Computer == Paper.Image)
                        {
                            Computer = Scissors.Image;
                        }
                        else if (Computer == Scissors.Image)
                        {
                            Computer = Rock.Image;
                        }
                        StateHasChanged();
                    });
                    await Task.Delay(100, token);
                }
                else
                {
                    break;
                }
            }
        });
        gameStatus = GameStatus.Run;
    }
    void Choose(GameItem item)
    {
        if (gameStatus != GameStatus.Run)
            return;
        cts.Cancel();
        gameStatus = GameStatus.Restart;
        You = item.Image;
        switch (item.Name)
        {
            case "Rock":
                Rock.Selected = true;
                break;
            case "Paper":
                Paper.Selected = true;
                break;
            case "Scissors":
                Scissors.Selected = true;
                break;
        }
    }
    void Reset()
    {
        GameMessage = "";
        Rock.Selected = false;
        Paper.Selected = false;
        Scissors.Selected = false;
    }
    public enum GameStatus
    {
        Start,
        Run,
        Restart
    }

    public class GameItem
    {
        public string Name { get; set; }

        public string Image
        {
            get
            {
                return $"/Images/{Name}.png";
            }
        }
        public bool Selected { get; set; }
        public string Background
        {
            get
            {
                if (Selected == true)
                {
                    return "bg-secondary";
                }
                else
                {
                    return "";
                }
            }
        }
    }

    string GameMessage = "";
    GameItem Rock = new GameItem { Name = "Rock" };
    GameItem Paper = new GameItem { Name = "Paper" };
    GameItem Scissors = new GameItem { Name = "Scissors" };
    GameStatus gameStatus = GameStatus.Start;
    string Computer = "";
    string You = "";
    protected override void OnInitialized()
    {
        Computer = Rock.Image;
    }
}
